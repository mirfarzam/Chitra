{"version":3,"sources":["logo.svg","Components/form/formComponents/Submit.js","Components/form/formComponents/TextInput.js","Components/form/formComponents/Checkbox.js","Components/form/Form.js","Components/form/FormBox.js","App.js","Reducers/countReducer.js","Stores/configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","Submit","props","className","this","active","type","value","disabled","React","Component","connect","state","ownProps","form","submit","TextInput","event","fieldName","target","name","fieldValue","fieldValidation","length","document","getElementsByClassName","numBars","i","getElementById","classList","add","remove","onChange","placeholder","for","id","onPasswordFieldChange","bind","metric","style","marginLeft","Checkbox","children","Form","field","validation","console","log","output","structure","forEach","element","model","push","defaultProps","FormBox","title","sister","href","description","alternative","App","countReducer","action","initialState","configureStore","createStore","Boolean","window","location","hostname","match","ReactDOM","render","store","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1a90a749.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport {decreamentAction, increamentAction} from \"../../../Actions/counterActions\";\nimport connect from \"react-redux/es/connect/connect\";\n\n\nclass Submit extends React.Component {\n    constructor (props) {\n        super(props) ;\n        this.props = props;\n\n    }\n\n    render() {\n        return <input className={`${this.props.active ? \"active\" : \"\"}`} type={\"submit\"} value={`${this.props.value}`} disabled={true}/>;\n    }\n\n}\n\n\nfunction mapStateToProps(state, ownProps) {\n    return  {\n       active : state.form.submit\n    }\n}\n\n// const mapDispatchToProps = dispatch => ({\n//     addOne : () => dispatch(increamentAction),\n//     minusOne : () => dispatch(decreamentAction)\n// });\n\nexport default connect(\n    mapStateToProps,\n    null\n)(Submit);\n","import React from 'react'\n\nclass TextInput extends React.Component {\n    constructor (props) {\n        super(props);\n        this.props = props;\n    }\n\n    onPasswordFieldChange(event) {\n        const fieldName = event.target.name;\n        const fieldValue = event.target.value;\n        const fieldValidation = fieldValue.length >= 8 ; //&& fieldValue.value.match(/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/);\n        if(document.getElementsByClassName(\"passwordMetric\").length > 0) {\n            let numBars = fieldValue.length > 6 ? 6 : fieldValue.length;\n            for(let i = 0; i < 7; i++) {\n                if(i <= numBars && i != 0) {\n                    document.getElementById(\"passwordMetric-\"+i).classList.add(\"valid\")\n                } else if(i != 0) {\n                    document.getElementById(\"passwordMetric-\"+i).classList.remove(\"valid\")\n                }\n            }\n        }\n        this.props.onChange(fieldName, fieldValue, fieldValidation)\n    }\n\n    render() {\n        switch (this.props.type) {\n            case \"usernameOrEmail\":\n                return (\n                    <section>\n                        <label>ایمیل یا نام کاربری</label>\n                        <input type={\"text\"} placeholder={\"nima@gmail.com\"} className={\"text-left placeholder-text-left\"}/>\n                    </section>\n                );\n            case \"email\":\n                return (\n                    <section>\n                        <label>ایمیل</label>\n                        <input type={\"text\"} placeholder={\"nima@gmail.com\"} className={\"text-left placeholder-text-left\"}/>\n                    </section>\n                );\n            case \"username\":\n                return (\n                    <section>\n                        <label>نام کاربری</label>\n                        <input type={\"text\"} placeholder={\"nima_hamedi\"} className={\"text-left placeholder-text-left\"}/>\n                    </section>\n                );\n            case \"password\":\n                return (\n                    <section>\n                        <label for=\"password\" >رمز عبور</label>\n                        <input name={\"password\"} id=\"password\" type={\"password\"} placeholder={\"حداقل ۸ کاراکتر\"} className={\"text-left\"}\n                               onChange={this.onPasswordFieldChange.bind(this)}\n                        />\n                        {this.props.metric &&\n                        <div>\n                            <div className={\"passwordMetric\"} id=\"passwordMetric-1\"/>\n                            <div className={\"passwordMetric\"} id=\"passwordMetric-2\"/>\n                            <div className={\"passwordMetric\"} id=\"passwordMetric-3\"/>\n                            <div className={\"passwordMetric\"} id=\"passwordMetric-4\"/>\n                            <div className={\"passwordMetric\"} id=\"passwordMetric-5\"/>\n                            <div className={\"passwordMetric\"} style={{marginLeft:\"0\"}} id=\"passwordMetric-6\"/>\n                        </div>\n                            }\n                    </section>\n                );\n        }\n    }\n}\n\n// const mapDispatchToProps = dispatch => ({\n//    addOne : () => dispatch(increamentAction),\n//    minusOne : () => dispatch(decreamentAction)\n// });\n\n\nexport default TextInput;","import React from 'react'\n\nclass Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n    }\n\n    render() {\n        return (\n            <label className=\"checkBoxcontainer\">\n                <input type=\"checkbox\"/>\n                <span className=\"checkmark\"/>\n                {this.props.children}\n            </label>\n        );\n    }\n}\n\nexport default Checkbox;\n","import React from 'react'\nimport TextInput from \"./formComponents/TextInput\";\nimport Checkbox from \"./formComponents/Checkbox\";\nimport Submit from \"./formComponents/Submit\";\n\n\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n    }\n\n    static defaultProps = {\n        structure : [\n            {\n                model : \"text\",\n                type : \"email\",\n            },\n            {\n                model : \"text\",\n                type : \"password\",\n            },\n            {\n                model : \"checkbox\",\n                children : \"مرا به خاطر بسپار\"\n            },\n            {\n                model : \"submit\",\n                value : \"مجید\"\n            }\n        ]\n    };\n\n    onChange(field, value, validation) {\n        // parent class change handler is always called with field name and value\n        //this.setState({[field]: value});\n        console.log({\n            name: field,\n            value: value,\n            validation : validation\n        });\n    }\n\n    render() {\n        let output = [];\n        this.props.structure.forEach(element=>{\n            switch (element.model) {\n                case \"text\":\n                   output.push(\n                       <TextInput type={`${element.type}`}  onChange={this.onChange.bind(this)}\n                                  metric = {`${element.metric || false}`}\n                       />\n                   );\n                   break;\n                case \"checkbox\":\n                    output.push(\n                        <Checkbox>\n                            {element.children}\n                        </Checkbox>\n                    );\n                    break;\n                case \"submit\":\n                    output.push(\n                        <Submit value={`${element.value}`} />\n                    );\n                    break;\n            }\n        });\n        console.log(output);\n        return output;\n    }\n}\n\n\nexport default Form;","import React from 'react'\nimport TextInput from \"./formComponents/TextInput\";\nimport Checkbox from \"./formComponents/Checkbox\";\nimport Submit from \"./formComponents/Submit\";\nimport Form from \"./Form\";\n\n\nclass FormBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.props = props\n    }\n\n    static defaultProps = {\n        title : \"ثبت نام\",\n        description : \"برای ثبت نام اطلاعات خود را وارد کنید\",\n        sister : \"ورود\",\n        alternative : null,\n        structure : [\n            {\n                model : \"text\",\n                type : \"username\"\n            },\n            {\n                model : \"text\",\n                type : \"email\"\n            },\n            {\n                model : \"text\",\n                type : \"password\",\n                metric : true\n            },\n            {\n                model : \"checkbox\",\n                children : \"قبل از ثبت نام قوانین و مقررات را مطالعه کردم و آنها را می‌پذیرم.\"\n            },\n            {\n                model : \"submit\",\n                value : \"ثبت نام\"\n            }\n        ]\n    };\n\n    render() {\n        return (\n            <div className={\"formBox\"}>\n                <div className={\"container\"}>\n                    <div className={\"row\"}>\n                        <div className={\"col-sm-6\"}>\n                            <h4 className={\"title\"}>\n                                {this.props.title}\n                            </h4>\n                        </div>\n                        {this.props.sister != null &&\n                        <div className={\"col-sm-6\"}>\n                            <a className={\"sisFormBox\"} href={\"#\"}>\n                                {this.props.sister}\n                                <span></span>\n                            </a>\n                        </div>\n                        }\n                    </div>\n                    { this.props.description != null &&\n                    <div className={\"row\"}>\n                        <div className={\"col-sm-12\"}>\n                            <p className={\"description\"}>\n                                {this.props.description}\n                            </p>\n                        </div>\n                    </div>\n                    }\n                    <div className={\"row rowForm\"}>\n                        <form>\n                            <Form structure={this.props.structure}/>\n                        </form>\n                    </div>\n                    {this.props.alternative != null &&\n                    <div className={\"row\"}>\n                        <div className={\"col-sm-12 text-center\"}>\n                            <a className={\"altFormBox\"} href={\"#\"}>\n                                {this.props.alternative}\n                            </a>\n                        </div>\n                    </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default FormBox;","import React from 'react';\nimport logo from './logo.svg';\nimport './Styles/fonts.css';\nimport './Styles/App.css';\n\nimport {increamentAction, decreamentAction} from './Actions/counterActions'\nimport connect from \"react-redux/es/connect/connect\";\nimport Submit from \"./Components/form/formComponents/Submit\";\nimport TextInput from \"./Components/form/formComponents/TextInput\";\nimport Checkbox from \"./Components/form/formComponents/Checkbox\";\nimport FormBox from \"./Components/form/FormBox\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className={\"fullbox bsefid gocenter\"}>\n          <FormBox/>\n      </div>\n    </div>\n  );\n}\n\n\n// const mapStateToProps = state =>({\n//     ...state\n// });\n//\n// const mapDispatchToProps = dispatch => ({\n//    addOne : () => dispatch(increamentAction),\n//    minusOne : () => dispatch(decreamentAction)\n// });\n//\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default App;","const initialState = 0;\n\n\nexport const countReducer = function (state = initialState, action) {\n    switch (action.type) {\n        case \"INCREMENT\":\n            console.log(state);\n            return state + 1;\n        case \"DECREMENT\":\n            return state - 1;\n        default:\n            return state;\n    }\n};","import { createStore } from \"redux\";\nimport  { countReducer } from \"../Reducers/countReducer\";\n\n\nconst initialState = {\n    form : {\n        submit : false\n    }\n};\n\nfunction configureStore(state = initialState) {\n    return createStore(countReducer,state);\n}\n\nexport default configureStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport configureStore from \"./Stores/configureStore\"\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}